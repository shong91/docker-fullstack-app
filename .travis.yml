language: generic

sudo: required

# 앱을 도커환경에서 실행하고 있으니, Travis CI에게 도커환경으로 만들 것이라고 선언.
services:
  - docker 

# 구성된 도커 환경(개발버전) Dockerfile.dev 를 이용해 도커 이미지 생성. 
before_install:
  - docker build -t hhhongso/react-test-app -f ./frontend/Dockerfile.dev ./frontend

# 생성된 테스트 이미지를 이용해 테스트 수행
script:
  - docker run -e CI=true hhhongso/react-test-app npm run test

# 테스트 성공 시 하나하나의 프로젝트의 운영버전 이미지를 빌드 (Dockerfile 을 이용할 것이므로 -f 으로 설정해줄 필요 없이 default 적용됨)
after_success:
  - docker build -t hhhongso/docker-frontend ./frontend 
  - docker build -t hhhongso/docker-backend ./backend 
  - docker build -t hhhongso/docker-nginx ./nginx
  
  # 도커 허브에 빌드된 파일을 넣어주기 위해 도커 허브에 로그인  
  - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_ID" --password-stdin

  # 빌드된 이미지를 도커허브에 보내주기
  - docker push hhhongso/docker-frontend
  - docker push hhhongso/docker-backend
  - docker push hhhongso/docker-nginx

# 배포
deploy:
  provider: elasticbeanstalk
  region: "ap-northeast-2"
  app: "docker-fullstack-app"
  env: "Dockerfullstackapp-env"
  bucket_name: elasticbeanstalk-ap-northeast-2-697230780493
  bucket_path: "docker-fullstack-app"
  on:
    branch: main
  
  # IAM USER 의 key. Travis CI 의 env에 등록한 환경변수를 가져와 사용한다. 
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_ACCESS_KEY


